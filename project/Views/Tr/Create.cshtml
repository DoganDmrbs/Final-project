@*controllera gönderirken bu modeli gönderiyorum*@
@model  Events
@using Newtonsoft.Json
@{
    ViewBag.Title = "Create Event";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}


<main class="login">
    <div class="container">
        <div class="login__center">

            <h2 class="login__heading">New Note</h2>

            @*ilerde token bazlı giriş yapıldığında uygun olmayan token lara müsade etmez*@

            @Html.AntiForgeryToken() 

            @*1. action, 2. controller, 3. methodu post mu get mi*@ 
            @*controllere gönderdiğimiz alanlar bizim form parantezi içindekilerdir. *@

            @using (Html.BeginForm("CreateEvent", "Tr", FormMethod.Post))
            {
                <div class="form-group form-group__label">
                    @Html.LabelFor(c => c.Subject, "Subject")
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(c => c.Subject, new { type = "text", @class = "form-control", required = "required", @placeholder = "Subject" })
                    @Html.ValidationMessageFor(c => c.Subject)  @*boş bırakırsan bu alan zorunlu mesajı veriyor.*@
                    <span class="form-icon"></span>
                </div>

                <div class="form-group form-group__label">
                    @Html.LabelFor(c => c.Description, "Explanation")
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(c => c.Description, new { type = "text", @class = "form-control", required = "required", @placeholder = "Explanation" })
                    @Html.ValidationMessageFor(c => c.Description)
                    <span class="form-icon "></span>
                </div>


                <div class="form-group form-group__label">
                    @Html.LabelFor(c => c.Start, "Starting Date")
                </div>
                <div class="form-group">
                    <span class="form-group__show-type js-show-type icon-eye"></span>
                    @Html.TextBoxFor(c => c.Start, "{0:d MMM yyyy}", new { type = "date", @class = "form-control", required = "required", @placeholder = "Starting Date" })
                    @Html.ValidationMessageFor(c => c.Start)
                    <span class="form-icon "></span>
                </div>

                <div class="form-group form-group__label">
                    @Html.LabelFor(c => c.End, "Deadline")
                </div>
                <div class="form-group">
                    <span class="form-group__show-type js-show-type icon-eye"></span>
                    @Html.TextBoxFor(c => c.End, "{0:d MMM yyyy}", new { type = "date", @class = "form-control", required = "required", @placeholder = "Deadline" })
                    @Html.ValidationMessageFor(c => c.End)
                    <span class="form-icon "></span>
                </div>

                <div class="form-group form-group__label">
                    @Html.LabelFor(c => c.ThemeColor, "Calendar Color")
                </div>
                <div class="form-group">
                    <span class="form-group__show-type js-show-type icon-eye"></span>
                    @Html.TextBoxFor(c => c.ThemeColor, new { type = "text", @class = "form-control", required = "required", @placeholder = "Calendar Color" })
                    @Html.ValidationMessageFor(c => c.ThemeColor)
                    <span class="form-icon "></span>
                </div>


                <input id="btnUpdate" type="submit" value="Save" class="btn btn-primary btn-lg pull-right">
            }
        </div>
    </div>

</main>